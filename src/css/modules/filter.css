/* Filter Dropdown */

.filter-dropdown {
  position: fixed;
  bottom: 2rem;
  bottom: calc(2rem + env(safe-area-inset-bottom, 0px)); /* Account for safe area */
  left: 50%;
  transform: translateX(-50%);
  z-index: var(--header-z-index);
  pointer-events: none; /* Don't block strips - only button and options should capture events */
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: var(--spacing-sm);
  transition: opacity 0.3s ease;
}

/* Fade out when about is visible */
.filter-dropdown.fade-out {
  opacity: 0;
  pointer-events: none;
}

.filter-dropdown-button {
  background: #ffffff;
  border: none;
  border-radius: var(--radius-sm);
  color: #000000;
  font-size: var(--font-size-base);
  padding: var(--spacing-sm) var(--spacing-lg);
  padding-top: calc(var(--spacing-sm) + 2px);
  cursor: pointer;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  gap: var(--spacing-sm);
  letter-spacing: var(--letter-spacing-base);
  text-transform: uppercase;
  font-family: var(--font-family);
  order: 2; /* Button below options visually */
  width: fit-content;
  min-width: 80px; /* Fixed minimum width to prevent size changes */
  min-height: 32px; /* Fixed height */
  white-space: nowrap;
  pointer-events: auto; /* Button captures events even though parent doesn't */
  box-sizing: border-box;
}

.filter-dropdown-button:hover {
  background: #cccccc;
  color: #000000;
}

/* Keep same size when showing close symbol - just change content */
.filter-dropdown.open .filter-dropdown-button {
  /* Remove font-size change to keep button size consistent */
}

.filter-dropdown-content {
  display: none;
  flex-direction: column;
  align-items: center;
  gap: var(--spacing-sm);
  white-space: nowrap;
  pointer-events: none;
  order: 1; /* Options above button visually */
  width: auto;
}

.filter-dropdown.open .filter-dropdown-content {
  display: flex;
  pointer-events: auto;
}

.filter-separator {
  border: none;
  border-top: 1px solid rgba(255, 255, 255, 0.2);
  margin: 0.25rem 0;
}

.filter-option {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  cursor: pointer;
  user-select: none;
  padding: var(--spacing-sm) var(--spacing-md);
  padding-top: calc(var(--spacing-sm) + 2px);
  border-radius: var(--radius-md);
  background: #333333;
  width: fit-content;
  flex-shrink: 0;
  transition: background 0.4s ease;
}

.filter-option:hover {
  background: #555555;
}

.filter-option input[type="checkbox"] {
  display: none;
}

.filter-option span {
  color: #ffffff;
  font-size: var(--font-size-base);
  white-space: nowrap;
  letter-spacing: var(--letter-spacing-base);
  text-transform: uppercase;
}

/* Checked state - white background with black text */
.filter-option:has(input[type="checkbox"]:checked) {
  background: #ffffff;
}

.filter-option:has(input[type="checkbox"]:checked) span {
  color: #000000;
}

.filter-option:has(input[type="checkbox"]:checked):hover {
  background: #cccccc;
}

/* CSS Filtering System */
/* By default, all strips are visible */
.strip {
  display: block;
}

/* When filters are active, hide all strips by default */
body.filter-active .strip {
  display: none !important;
}

/* Show strips that have the filter-match class (added by JavaScript) */
body.filter-active .strip.filter-match {
  display: block !important;
}
